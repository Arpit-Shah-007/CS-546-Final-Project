<div class="container">
    {{> navbar}}
</div>
<div class="container">
    <h4>Upload Project</h4>
    <p>Post a Project video to your account.</p>
    <div class="container d-flex p-5 border justify-content-around">
        <div class="d-flex flex-column border rounded align-items-center justify-content-end">
            <video class="video-upload-sec p-3" src="" controls id="project_video"></video>
            <div class="my-3">
                <input type="file" accept="video/*" hidden name="videoLink" id="upload-feature"
                    onchange="setPreviewVideo(event)" />
                <div class="error-message" id="videoError"></div>
                <label class="btn btn-primary rounded" for="upload-feature">Upload Video</label>
            </div>
        </div>
        <div class="w-75 p-3">
            <div class="form-group">
                <label for="title">Title</label>
                <input type="text" placeholder="Title" name="title" class="form-control y-2" id="title">
                <div class="error-message" id="titleError"></div>
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <input type="text" placeholder="Description" name="description" class="form-control y-2"
                    id="description">
                <div class="error-message" id="descriptionError"></div>
            </div>
            <div class="form-group">
                <label for="branch">Branch</label>
                <input type="text" placeholder="Branch" name="branch" class="form-control y-2" id="branch">
                <div class="error-message" id="branchError"></div>
            </div>
            <div class="form-group">
                <label for="subject">Subject</label>
                <input type="text" placeholder="Subject" name="subject" class="form-control y-2" id="subject">
                <div class="error-message" id="subjectError"></div>
            </div>
            <div class="d-flex justify-content-between">
                <button type="button" class="btn btn-danger" id="discardButton">Discard</button>
                <button type="button" class="btn btn-success" id="create_project">Post</button>
            </div>
        </div>
    </div>
</div>


<script>

    const setPreviewVideo = (e) => {
        const file = e.target.files[0]
        console.log("file changed", file)
        document.getElementById('project_video').setAttribute('src', URL.createObjectURL(file))
    }

    const validateProjectFields = () => {
        let isValid = true;
        const fields = [
            { id: 'title', errorId: 'titleError', message: 'Title is required' },
            { id: 'description', errorId: 'descriptionError', message: 'Description is required' },
            { id: 'branch', errorId: 'branchError', message: 'Branch is required' },
            { id: 'subject', errorId: 'subjectError', message: 'Subject is required' },
            { id: 'upload-feature', errorId: 'videoError', message: 'Project video is required' }
        ];

        fields.forEach(field => {
            let value
            if (field.id != 'upload-feature') {
                value = document.getElementById(field.id).value.trim();
            } else {
                value = document.getElementById(field.id)
            }

            const errorElement = document.getElementById(field.errorId);
            if (!value || (field.id == 'upload-feature' && typeof value != 'object')) {
                errorElement.textContent = field.message;
                isValid = false;
            } else {
                errorElement.textContent = '';
            }
        });

        return isValid;
    };

    const createProject = async (e) => {
        try {
            checkIsLogin();
            if (!validateProjectFields()) {
                return;
            }
            const title = document.getElementById("title").value;
            const description = document.getElementById("description").value;
            const subject = document.getElementById("subject").value;
            const branch = document.getElementById("branch").value;
            const file = document.getElementById("upload-feature").files[0];

            let form = new FormData();
            form.append('title', title);
            form.append('description', description);
            form.append('subject', subject);
            form.append('branch', branch);
            form.append('videoLink', file);

            const response = await fetch(_base_url + '/project', {
                method: "POST",
                body: form,
                headers: {
                    Authorization: 'Bearer ' + localStorage.getItem('user-token')
                }
            });

            let data = await response.json();
            if (data && data.status) {
                showAlert(data.msg, 'success');
                setTimeout(() => {
                    window.location.href = '/dashboard';
                }, 2000);
            } else {
                showAlert(data.msg, 'error');
            }
        } catch (err) {
            showAlert(error.message, 'error');
            return;
        }
    };

    document.querySelector('#create_project').addEventListener('click', createProject);

    const discardProject = () => {
        document.getElementById("title").value = "";
        document.getElementById("description").value = "";
        document.getElementById("subject").value = "";
        document.getElementById("branch").value = "";
        document.getElementById("upload-feature").value = "";
        document.getElementById("project_video").src = "";
        clearErrorMessages();
    };

    document.getElementById("discardButton").addEventListener("click", discardProject);

    const clearErrorMessages = () => {
        const errorElements = document.querySelectorAll('.error-message');
        errorElements.forEach(element => {
            element.textContent = '';
        });
    };

    document.getElementById("title").addEventListener("input", function () {
        document.getElementById("titleError").textContent = "";
    });

    document.getElementById("upload-feature").addEventListener("change", function () {
        document.getElementById("videoError").textContent = "";
    });
    document.getElementById("description").addEventListener("input", function () {
        document.getElementById("descriptionError").textContent = "";
    })

    document.getElementById("branch").addEventListener("input", function () {
        document.getElementById("branchError").textContent = "";
    })
    document.getElementById("subject").addEventListener("input", function () {
        document.getElementById("subjectError").textContent = "";
    })


</script>